USE master;
GO

IF EXISTS(SELECT * FROM sys.databases WHERE name='CasinoDatabase')
BEGIN
	ALTER DATABASE CasinoDatabase SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE CasinoDatabase;
END


CREATE DATABASE CasinoDatabase;
GO

USE CasinoDatabase;
GO

CREATE TABLE SKILLS (
    SKILL_ID INT PRIMARY KEY IDENTITY(1,1),
    SKILL_NAME VARCHAR(100) NOT NULL UNIQUE,
);

CREATE TABLE SECTION (
    SECT_CODE INT PRIMARY KEY IDENTITY(1,1),
    SECT_NAME VARCHAR(100) NOT NULL UNIQUE
);

CREATE TABLE SECTION_SKILLS (
    SKILL_ID INT NOT NULL,
    SECT_CODE INT NOT NULL,
    PRIMARY KEY (SKILL_ID, SECT_CODE),
    FOREIGN KEY (SKILL_ID) REFERENCES SKILLS (SKILL_ID),
    FOREIGN KEY (SECT_CODE) REFERENCES SECTION (SECT_CODE)
);

CREATE TABLE EMPLOYEE_ROLE(
    ROLE_CODE INT PRIMARY KEY IDENTITY(1,1),
    ROLE_TITLE VARCHAR(100) NOT NULL,
    ROLE_DESCRIPTION VARCHAR(1000) NOT NULL
);

CREATE TABLE CERTIFICATION (
    CERT_CODE INT PRIMARY KEY IDENTITY(1,1),
    CERT_NAME VARCHAR(100) NOT NULL,
    CERT_VALID_FOR DATE NOT NULL CHECK (CERT_VALID_FOR >= GETDATE()),
    CERT_ISSUED_BY VARCHAR(100) NOT NULL
);

CREATE TABLE EMP_ROLE_CERT (
    ROLE_CODE INT NOT NULL,
    CERT_CODE INT NOT NULL,
    PRIMARY KEY (ROLE_CODE, CERT_CODE),
    FOREIGN KEY (ROLE_CODE) REFERENCES EMPLOYEE_ROLE(ROLE_CODE),
    FOREIGN KEY (CERT_CODE) REFERENCES CERTIFICATION(CERT_CODE)
);

CREATE TABLE DEPARTMENT	(
	DEPT_ID INT PRIMARY KEY IDENTITY(1,1),
	DEPT_NAME VARCHAR(100) NOT NULL
);

CREATE TABLE EMPLOYEE (
    EMP_ID INT PRIMARY KEY IDENTITY(1,1),
    EMP_FNAME VARCHAR(100) NOT NULL,
    EMP_LNAME VARCHAR(100) NOT NULL,
    EMP_GENDER VARCHAR(100) NOT NULL,
    EMP_STREET VARCHAR(100) NOT NULL,
    EMP_CITY VARCHAR(100) NOT NULL,
    EMP_PROVINCE VARCHAR(100) NOT NULL,
    EMP_ZIP VARCHAR(100) NOT NULL,
    EMP_DOB DATE NOT NULL,
    EMP_HIRE_DATE DATE NOT NULL,
    EMP_FIRE_DATE DATE,
    EMP_DEPART_DATE DATE,
    EMP_LOCKER INT,
    EMP_PAY_RATE DECIMAL(8,2) NOT NULL,
    EMP_VACATION_ENTITLEMENT INT NOT NULL,
    EMP_SICK_DAYS_ENTITLEMENT INT NOT NULL,
    DEPT_ID INT NOT NULL,
    ROLE_CODE INT NOT NULL,
    FOREIGN KEY (DEPT_ID) REFERENCES DEPARTMENT(DEPT_ID),
    FOREIGN KEY (ROLE_CODE) REFERENCES EMPLOYEE_ROLE(ROLE_CODE)
);

CREATE TABLE SCHEDULE (
  SCH_ID INT PRIMARY KEY IDENTITY(1,1),
  SCH_DATE DATE NOT NULL,
  EMP_ID INT NOT NULL,
  FOREIGN KEY (EMP_ID) REFERENCES EMPLOYEE (EMP_ID)
);

CREATE TABLE DEPARTMENT_HISTORY (
    HIST_ID INT PRIMARY KEY IDENTITY(1,1),
    HIST_START_DATE DATE NOT NULL,
    HIST_END_DATE DATE NOT NULL,
    DEPT_ID INT NOT NULL,
    EMP_ID INT NOT NULL,
    ROLE_CODE INT NOT NULL,
    FOREIGN KEY (DEPT_ID) REFERENCES DEPARTMENT(DEPT_ID),
    FOREIGN KEY (EMP_ID) REFERENCES EMPLOYEE(EMP_ID),
    FOREIGN KEY (ROLE_CODE) REFERENCES EMPLOYEE_ROLE(ROLE_CODE)
);

CREATE TABLE TRAINING_SESSION (
TRAIN_ID INT PRIMARY KEY IDENTITY(1,1),
TRAIN_DATE DATE NOT NULL,
TRAIN_START_TIME TIME NOT NULL,
TRAIN_END_TIME TIME NOT NULL,
CERT_CODE INT NOT NULL UNIQUE,
FOREIGN KEY (CERT_CODE) REFERENCES CERTIFICATION (CERT_CODE)
);

CREATE TABLE EMP_TRAIN_SESSION (
    TRAIN_ID INT NOT NULL,
    EMP_ID INT NOT NULL,
    EMP_TRAIN_ROLE VARCHAR(100) NOT NULL ,
    TRAIN_OUTCOME VARCHAR(4) NOT NULL,
    TRAIN_EXPIRY_DATE DATE NOT NULL,
    PRIMARY KEY (Train_ID, EMP_ID),
	FOREIGN KEY (TRAIN_ID) REFERENCES TRAINING_SESSION (TRAIN_ID),
    FOREIGN KEY (EMP_ID) REFERENCES EMPLOYEE (EMP_ID)
);

CREATE TABLE INVENTORY (
	INV_ID INT PRIMARY KEY IDENTITY(1,1),
	INV_TITLE VARCHAR(100) NOT NULL,
	INV_PRICE DECIMAL(8,2) NOT NULL,
	INV_QNTY INT NOT NULL,
);

CREATE TABLE LEAVE (
	LEAVE_ID INT PRIMARY KEY IDENTITY(1,1),
	LEAVE_TYPE VARCHAR(100) NOT NULL,
	LEAVE_START DATE NOT NULL,
	LEAVE_END DATE,
	LEAVE_COMMENTS VARCHAR(1000),
	EMP_ID INT NOT NULL,
	FOREIGN KEY (EMP_ID) REFERENCES EMPLOYEE(EMP_ID),
);

CREATE TABLE WRITTEN_WARNING (
	WW_ID INT PRIMARY KEY IDENTITY(1,1),
	WW_DATE DATE NOT NULL,
	WW_OFFENCE VARCHAR(100) NOT NULL,
	WW_COMMENTS VARCHAR(1000) NOT NULL,
	EMP_ID INT NOT NULL,
	FOREIGN KEY (EMP_ID) REFERENCES EMPLOYEE(EMP_ID),
);

CREATE TABLE SHIFT(
    SHIFT_ID INT PRIMARY KEY IDENTITY(1,1),
    SHIFT_START TIME NOT NULL,
    SHIFT_END TIME NOT NULL,
    SECT_CODE INT NOT NULL,
    EMP_ID INT NOT NULL,
    SCH_ID INT NOT NULL,
    FOREIGN KEY (SCH_ID) REFERENCES SCHEDULE(SCH_ID),
    FOREIGN KEY (EMP_ID) REFERENCES EMPLOYEE(EMP_ID),
    FOREIGN KEY (SECT_CODE) REFERENCES SECTION(SECT_CODE)
);

CREATE TABLE SHIFT_INVENTORY (
    SHIFT_ID INT NOT NULL,
    INV_ID INT NOT NULL,
    PRIMARY KEY (SHIFT_ID, INV_ID),
    FOREIGN KEY (SHIFT_ID) REFERENCES SHIFT(SHIFT_ID),
    FOREIGN KEY (INV_ID) REFERENCES INVENTORY(INV_ID)
);